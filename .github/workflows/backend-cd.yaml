name: Backend Continuous Deployment

on:
  push:
    branches: 
      - main
    paths:
      - 'starter/backend/**'
  workflow_dispatch: # Allows manual triggering

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  ECR_REPOSITORY: movie-picture-backend

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - name: Run Lint
        run: flake8 backend

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - name: Install Dependencies
        run: pip install -r backend/requirements.txt
      - name: Run Tests
        run: pytest backend

  build:
    needs: [lint, test]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build Docker Image
        run: docker build -t backend-app:$GITHUB_SHA .
        working-directory: backend

  push-to-ecr:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1
      - name: Tag Docker Image
        run: docker tag backend-app:$GITHUB_SHA $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:$GITHUB_SHA
      - name: Push Docker Image
        run: docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:$GITHUB_SHA

  deploy:
    needs: push-to-ecr
    runs-on: ubuntu-latest
    steps:
      - name: Set up kubectl
        uses: azure/setup-kubectl@v2
      - name: Deploy to Kubernetes
        run: |
          kubectl set image deployment/backend backend=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:$GITHUB_SHA
          kubectl rollout status deployment/backend