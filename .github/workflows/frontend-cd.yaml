name: Frontend Continuous Deployment

on:
  push:
    branches: 
      - main
    paths:
      - 'starter/frontend/**'
  workflow_dispatch: # Allows manual triggering

jobs:
  Linting:
    runs-on: ubuntu-latest
    environment: Development Environment

    steps:
      - name: Check out the Repository
        uses: actions/checkout@v3

      - name: Use Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: starter/frontend/package-lock.json

      - name: Install Dependencies
        working-directory: starter/frontend
        run: npm ci

      - name: Run Lint
        working-directory: starter/frontend
        run: npm run lint

  Test:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the Repository
        uses: actions/checkout@v3

      - name: Use Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: starter/frontend/package-lock.json
        
      - name: Install Dependencies
        working-directory: starter/frontend
        run: npm ci
  
      - name: Run Tests
        working-directory: starter/frontend
        run: npm run test

  Build:
    needs: [Linting, Test]
    runs-on: ubuntu-latest
    
    steps:
      - name: Check out the Repository
        uses: actions/checkout@v3
    
      - name: Use Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: starter/frontend/package-lock.json

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-1

      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and Push Docker Image
        working-directory: starter/frontend
        env:
          IMAGE_TAG: latest
          REPO_NAME: frontend
        run: |
          docker build --build-arg=REACT_APP_MOVIE_API_URL=http://localhost:5000 --tag 736618489805.dkr.ecr.us-west-1.amazonaws.com/$REPO_NAME:$IMAGE_TAG .
          docker push 736618489805.dkr.ecr.us-west-1.amazonaws.com/$REPO_NAME:$IMAGE_TAG

      - name: Configure Kubeconfig
        run: |
          aws eks update-kubeconfig --name udacity-project4 --region us-west-1

      - name: Deploy Docker Image to Amazon EKS
        working-directory: starter/frontend/k8s
        env:
          IMAGE_TAG: latest
          REPO_NAME: frontend
        run: |
          kustomize edit set image frontend=736618489805.dkr.ecr.us-west-1.amazonaws.com/$REPO_NAME:$IMAGE_TAG
          kustomize build | kubectl apply -f -