name: Backend Continuous Integration

on:
  workflow_dispatch: # Allows manual start of the pipeline
  pull_request:
    branches:
      - main
    paths: # Trigger only for changes in backend files
      - 'starter/backend/**' 

jobs:
  code_quality_check:
    runs-on: ubuntu-latest
    environment: DevEnv

    steps:
      - name: Retrieve Source Code
        uses: actions/checkout@v3

      - name: Initialize Python 3.10 Environment
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install Linting Packages
        working-directory: starter/backend
        run: |
          python -m pip install --upgrade pip
          pip install flask flask_cors pytest flake8  # Directly install necessary dependencies

      - name: Execute Linting
        working-directory: starter/backend
        run: flake8 .  # Run flake8 for code quality checks

  unit_tests:
    runs-on: ubuntu-latest
    needs: code_quality_check  # Ensure linting completes before tests

    steps:
      - name: Retrieve Source Code
        uses: actions/checkout@v3

      - name: Initialize Python 3.10 for Testing
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install Testing Dependencies
        working-directory: starter/backend
        run: |
          python -m pip install --upgrade pip
          pip install flask flask_cors pytest  # Directly install dependencies needed for testing

      - name: Run Unit Tests
        working-directory: starter/backend
        run: pytest  # Execute pytest for unit tests

  docker_build:
    runs-on: ubuntu-latest
    needs: [code_quality_check, unit_tests]  # Run only if linting and tests pass

    steps:
      - name: Retrieve Source Code
        uses: actions/checkout@v3

      - name: Build Docker Image for Backend
        working-directory: starter/backend
        run: docker build -t mp-backend:latest .